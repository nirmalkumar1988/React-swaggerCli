/**
 * Leave Quota Availability
 * Api to know to leave availablity for a particular block.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: ranjithkumar.kodangil@boeing.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var url = require("url");
var isomorphicFetch = require("isomorphic-fetch");
var assign = require("core-js/library/fn/object/assign");
var BASE_PATH = "http://localhost:8090/crew".replace(/\/+$/, "");
var BaseAPI = (function () {
    function BaseAPI(fetch, basePath) {
        if (fetch === void 0) { fetch = isomorphicFetch; }
        if (basePath === void 0) { basePath = BASE_PATH; }
        this.basePath = basePath;
        this.fetch = fetch;
    }
    return BaseAPI;
}());
exports.BaseAPI = BaseAPI;
;
/**
 * DefaultApi - fetch parameter creator
 */
exports.DefaultApiFetchParamCreator = {
    /**
     *
     * @summary Get leave quota for requested date.
     */
    leaveQuotaGet: function (options) {
        var baseUrl = "/leave/quota";
        var urlObj = url.parse(baseUrl, true);
        var fetchOptions = assign({}, { method: "GET" }, options);
        var contentTypeHeader = {};
        if (contentTypeHeader) {
            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);
        }
        return {
            url: url.format(urlObj),
            options: fetchOptions,
        };
    },
};
/**
 * DefaultApi - functional programming interface
 */
exports.DefaultApiFp = {
    /**
     *
     * @summary Get leave quota for requested date.
     */
    leaveQuotaGet: function (options) {
        var fetchArgs = exports.DefaultApiFetchParamCreator.leaveQuotaGet(options);
        return function (fetch, basePath) {
            if (fetch === void 0) { fetch = isomorphicFetch; }
            if (basePath === void 0) { basePath = BASE_PATH; }
            return fetch(basePath + fetchArgs.url, fetchArgs.options).then(function (response) {
                if (response.status >= 200 && response.status < 300) {
                    return response.json();
                }
                else {
                    throw response;
                }
            });
        };
    },
};
/**
 * DefaultApi - object-oriented interface
 */
var DefaultApi = (function (_super) {
    __extends(DefaultApi, _super);
    function DefaultApi() {
        _super.apply(this, arguments);
    }
    /**
     *
     * @summary Get leave quota for requested date.
     */
    DefaultApi.prototype.leaveQuotaGet = function (options) {
        return exports.DefaultApiFp.leaveQuotaGet(options)(this.fetch, this.basePath);
    };
    return DefaultApi;
}(BaseAPI));
exports.DefaultApi = DefaultApi;
;
/**
 * DefaultApi - factory interface
 */
exports.DefaultApiFactory = function (fetch, basePath) {
    return {
        /**
         *
         * @summary Get leave quota for requested date.
         */
        leaveQuotaGet: function (options) {
            return exports.DefaultApiFp.leaveQuotaGet(options)(fetch, basePath);
        },
    };
};
